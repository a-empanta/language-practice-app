
services:
  web:
    build:
      context: ./api
      dockerfile: ./docker/production/nginx/Dockerfile
    restart: unless-stopped
    volumes:
      - laravel-storage-production:/var/www/storage:ro
    networks:
      - production-network
    ports:
      - "${NGINX_PORT:-80}:80"
    depends_on:
      php-fpm:
        condition: service_healthy
    # Simple HTTP health check for your public-facing root
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://127.0.0.1/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  php-fpm:
    build:
      context: ./api
      dockerfile: ./docker/common/php-fpm/Dockerfile
      target: production
    restart: unless-stopped
    volumes:
      - laravel-storage-production:/var/www/storage
    env_file:
      - ./api/.env
    networks:
      - production-network
    healthcheck:
      test: ["CMD-SHELL", "php-fpm-healthcheck || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      mysql:
        condition: service_healthy

  php-cli:
    build:
      context: ./api
      dockerfile: ./docker/php-cli/Dockerfile
    tty: true
    stdin_open: true
    env_file:
      - ./api/.env
    networks:
      - production-network

  mysql:
    image: mysql:9.3.0
    restart: unless-stopped
    user: mysql
    ports:
      - "${DB_PORT:-3306}:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - mysql-data-production:/var/lib/mysql
    networks:
      - production-network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u \"$MYSQL_USER\" -p\"$MYSQL_PASSWORD\" || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    restart: unless-stopped
    networks:
      - production-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  production-network:

volumes:
  mysql-data-production:
  laravel-storage-production:
